{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matbo\\\\OneDrive\\\\Desktop\\\\React Projects\\\\Pomodoro-Timer-Complete\\\\src\\\\pomodoro\\\\Subtitle.js\";\nimport React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\nimport useInterval from \"../utils/useInterval\";\n\nfunction Subtitle({\n  TimerData,\n  setTimerData,\n  isTimerRunning,\n  hideSubtitle\n}) {\n  let {\n    defaultSession,\n    focusTime,\n    focusSecs,\n    breakTime,\n    breakSecs,\n    count,\n    label\n  } = TimerData;\n  let currentSession = defaultSession ? {\n    mins: focusTime,\n    secs: focusSecs\n  } : {\n    mins: breakTime,\n    secs: breakSecs\n  };\n  let progressNum = `${count / currentSession.secs * 100}`;\n  let nextLabel = defaultSession ? \"On Break\" : \"Focusing\";\n  useInterval(() => {\n    setTimerData(now => {\n      if (now.count >= now.focusSecs && now.label === \"Focusing\" || now.count >= now.breakSecs && now.label === \"On Break\") {\n        now.count = 0;\n        now.label = nextLabel;\n        now.defaultSession = !now.defaultSession;\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n      }\n\n      return { ...now,\n        count: now.count + 1\n      };\n    });\n  }, isTimerRunning ? 1000 : null);\n  return !hideSubtitle ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, label, \" for \", minutesToDuration(currentSession.mins), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, secondsToDuration(currentSession.secs - count), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: isTimerRunning ? \"none\" : \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"PAUSED\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": progressNum,\n    style: {\n      width: `${progressNum}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  });\n}\n\nexport default Subtitle;","map":{"version":3,"sources":["C:/Users/matbo/OneDrive/Desktop/React Projects/Pomodoro-Timer-Complete/src/pomodoro/Subtitle.js"],"names":["React","secondsToDuration","minutesToDuration","useInterval","Subtitle","TimerData","setTimerData","isTimerRunning","hideSubtitle","defaultSession","focusTime","focusSecs","breakTime","breakSecs","count","label","currentSession","mins","secs","progressNum","nextLabel","now","Audio","play","display","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\nimport useInterval from \"../utils/useInterval\";\n\nfunction Subtitle ({ TimerData, setTimerData, isTimerRunning, hideSubtitle }) {\n  \n  let { defaultSession, focusTime, focusSecs, breakTime, breakSecs, count, label } = TimerData;\n  let currentSession = defaultSession ? { mins: focusTime, secs: focusSecs,} : { mins: breakTime, secs: breakSecs };\n  let progressNum = `${(count / currentSession.secs) * 100}`;\n  let nextLabel = (defaultSession) ? \"On Break\" : \"Focusing\";\n\n  useInterval(() => {\n      setTimerData((now) => {\n        if (( now.count >= now.focusSecs && now.label === \"Focusing\" ) || ( now.count >= now.breakSecs && now.label === \"On Break\")) {\n          now.count = 0;\n          now.label = nextLabel;\n          now.defaultSession = !now.defaultSession;\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        }\n        return { ...now, count: now.count + 1 };\n  })},\n    isTimerRunning ? 1000 : null\n  );\n\n return (!hideSubtitle) ? (\n  <div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <h2 data-testid=\"session-title\">\n            {label} for {minutesToDuration(currentSession.mins)} minutes\n          </h2>\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration(currentSession.secs - count)} remaining\n          </p>\n        </div>\n      </div>\n      <div style={{ display: isTimerRunning ? \"none\" : \"block\" }}>\n        <h3>PAUSED</h3>\n      </div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <div className=\"progress\">\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={progressNum}\n              style={{ width: `${progressNum}%` }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (<div></div>)\n}\nexport default Subtitle"]},"metadata":{},"sourceType":"module"}